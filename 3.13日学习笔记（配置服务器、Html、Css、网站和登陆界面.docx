### 配置centOs的yum 出现的问题：

#### 问题：Loaded plugins: fastestmirror, langpacks

Loaded plugins:fastestmirror,langpacks并非错误。而是两者插件。fastest是最快的，mirror是镜像。所以，fastestmirror是帮助你找到最快捷的yum仓库的插件，lang是language语言的缩写，packs是packages包裹的缩写，langpacks是语言包插件。

GPGCHECK是检查软件包是否被篡改的一个重要工具。1是启用，0是禁用。把它由1改0，等于放弃安全检查。

 

#### 问题：CentOS使用yum命令提示Error: File contains no section headers

在镜像网站下载的.repo文件过多，导致系统不知使用哪个，所以将多余的删掉，只保留该有的一个在线yum源安装的.repo即可。

1.在centos下使用命令

#cd /etc/yum.repos.d

2.查看该目录下的所有.repo文件

\#ll

3.删除多余.repo文件，只保留：

CentOS-Debuginfo.repo

CentOS-Vault.repo

CentOS-Base.repo （在线yum源安装使用的配置文件）

CentOS-Media.repo   （光盘yum源使用的配置文件）

\--------------------- 

作者：wo达达的马蹄声  - 

来源：CSDN 

原文：https://blog.csdn.net/weixin_43968936/article/details/84872513 

版权声明：本文为博主原创文章，转载请附上博文链接！



问题：SSH服务器拒绝了密码



### 配置nginx全过程

#登陆云服务器

1.使用腾讯云自带的网页登陆云服务器，直接输入用户密码

2.或者在本地命令行/xshell软件ssh root@域名，输入密码

#下载yum

sudo yum install yum-utils

#进入/etc/yum.repos.d/

 cd /etc/yum.repos.d/

#新建nginx.repo

vi nginx.repo 

#查看nginx配置内容，是否如下所示，注意往下拉，有些系统自带配置，不要重复粘贴，报错

[nginx-stable] name=nginx stable repo baseurl=http://nginx.org/packages/centos/$releasever/$basearch/ gpgcheck=1 enabled=1 gpgkey=https://nginx.org/keys/nginx_signing.key
[nginx-mainline] name=nginx mainline repo baseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/ gpgcheck=1 enabled=0 gpgkey=https://nginx.org/keys/nginx_signing.key

#使用esc， :wq 保存修改退出，下载nginx

 sudo yum install nginx

#开启nginx，在浏览器地址输入域名，即可看到

nginx -c /etc/nginx/nginx.conf

#查看配置文件内容nginx.conf，关注http{}ٖ内是否有include /etc/nginx/conf.d/*.conf; 

 cat /etc/nginx/nginx.conf

\#修改nginx默认配置，将对/的请求映射到root建立的html所在文件夹/data/www上

vi /etc/nginx/conf.d/default.conf

#配置内容应为

server{

listen       80;  

server_name  localhost;

}

location / {  

​      root   /data/www;  

  }

 #修改nginx配置文件后，重启报错：nginx: [emerg] socket() [::]:80 failed (97: Address family not supported by protocol)

vim /etc/nginx/conf.d/default.conf

#修改下文

listen       80 default_server;

listen       [::]:80 default_server;

改为：

listen       80;

#listen       [::]:80 default_server;

#服务器建立文件目录 

mkdir /data/www

#从本地上传文件

scp C:\Users\goodluck\Downloads\web_projects\test_site\personal_site.html root@154.8.210.12:/data/www/index.html

![img](file:///C:/Users/goodluck/AppData/Local/Temp/msohtmlclip1/01/clip_image004.jpg)

重新启动nginx即可

![img](file:///C:/Users/goodluck/AppData/Local/Temp/msohtmlclip1/01/clip_image002.png)

#重新加载nginx的配置，不中断服务器

nginx -s reload

 

\#页面未加载出来，在服务器上查看80端口是否被占用：

 netstat -nap

\#把占用80端口的PID停止进程，Kill PID号码,比如2124

 kill 2124

\#重新加载nginx

 service nginx restart

\#页面未加载

清除浏览器该页面缓存

\#加载成功

\#图片未成功，没有权限

chmod -R  777 文件所在目录，比如data/www

# css笔记

#### 无序列表的点：

<html>

<head>
<style type="text/css">
ul.circle {list-style-type:circle} #空心圆
ul.square {list-style-type:square} #实心方
ol.upper-roman {list-style-type:upper-roman} #大写罗马I II
ol.lower-alpha {list-style-type:lower-alpha} #小写字母ab
</style>
</head>

</html>

list-style-type属性值：

- none不使用项目符号
- disc实心圆，默认值
- circle空心圆
- square实心方块
- lower-roman小写罗马数字/upper-roman大写罗马数字

- decimal阿拉伯数字
- lower-alpha小写英文字母/upper-alpha大写英文字母
  

#### 链接的样式

a:link {color:#FF0000;}      /* unvisited link */
a:visited {color:#00FF00;}  /* visited link */
a:hover {color:#FF00FF;}  /* mouse over link */
a:active {color:#0000FF;}  /* selected link */

#### HTML font: 12px/1.5 Arial

字体12像素 行高 1.5em 字体 Arial 

> 1.5 px，文字的上下间距相当于 0，都挤到一起了;1.5（注意没有单位，只是数字）表示 [line-height](https://www.baidu.com/s?wd=line-height&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao) 为当前字体大小的 1.5倍



可以参考下面资料：我们常用的font属性有下面这六种：

[font-style](https://www.baidu.com/s?wd=font-style&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao)设定斜体　如：[font-style](https://www.baidu.com/s?wd=font-style&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao): italic;
[font-weight](https://www.baidu.com/s?wd=font-weight&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao)设定文字粗细　如：[font-weight](https://www.baidu.com/s?wd=font-weight&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao): bold;
[font-size](https://www.baidu.com/s?wd=font-size&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao)设定文字大小　如：[font-size](https://www.baidu.com/s?wd=font-size&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao): 12px;
[line-height](https://www.baidu.com/s?wd=line-height&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao)设定行距　如：[line-height](https://www.baidu.com/s?wd=line-height&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao): 150%;
color设定文字颜色（注意不是font-color）　如：color: red;
[font-family](https://www.baidu.com/s?wd=font-family&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao)设定字体　如：[font-family](https://www.baidu.com/s?wd=font-family&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao) : "Lucida Grande", Verdana, Lucida, Arial, Helvetica, 宋体,[sans-serif](https://www.baidu.com/s?wd=sans-serif&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao);　　上述的属性，我们可以概括写在一行font属性里。需要注意的是color属性我们需要单独定义。font: italic bold 12px/150% "Lucida Grande", Verdana, Lucida, Arial, Helvetica, 宋体,[sans-serif](https://www.baidu.com/s?wd=sans-serif&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao);}

#### CSS中margin: 0 auto auto auto（上右下左）

- 意思不同。margin:auto=margin:auto auto auto auto，表示上下左右都为auto；margin:0 auto=margin:0 auto 0 auto，表示上下为0，左右为auto；

- 居中方式不同。margin:auto表示横竖都居中，margin: 0 auto表示横居中，竖不居中；

- 如果后面只写2个参数的话，如margin：1px、2px，则表示上下外边距为都为1px，左右外边距都为2px。

#### 背景图片不能正常显示：

- 编码是否正确

- 图片路径，查看urL能否点开

  background图片和container容器大小，图片相对过大过小，显示一部分

  

#### css中no-repeat一般用在元素backgroud-repeat的设置中，含义为不平铺；

一般与background-image 一起使用；
此图片做背景时不平铺；
另外还有几个其他值：
repeat:平铺
repeat-x:横向平铺
repeat-y:纵向平铺

#### CSS 如何定位背景图像：  

```css
body
{ 
background-image:url('bgimage.gif');
background-repeat:no-repeat;
background-attachment:fixed;
background-position:center center;或者30% 20%;或者10px 100px;水平，垂直，仅规定了一个值，另一个值将是50%。可混合使用 % 和 position 值。
}
```

> 所有浏览器都支持 background-position 属性。需要把 background-attachment 属性设置为 "fixed"，才能保证该属性在 Firefox 和 Opera 中正常工作。

### HTML的<a></a>

一、绝对跳转

```html
 <a href="http://www.baidu.com/">百度</a>
```



二、相对跳转有如下方式，需要了解（以下的例子中，分别以你的例子和带.html尾缀进行演示）：

转载:http://www.cnblogs.com/theWayToAce/;

    1. 本目录的使用（与本文件在相同的文件夹下）：

         <a href="123456">

         <a href="123456.html">



    2. 本目录下的子文件夹（设文件夹名为newdoc）的使用：

         <a href="newdoc/123456">

         <a href="newdoc/123456.html">



    3. 本目录下的子文件夹下的子文件夹（设文件夹名为newdoc2）的使用(如果更多层，则依此类推)：

         <a href="newdoc/newdoc2/123456">

         <a href="newdoc/newdoc2/123456.html">



    4. 本目录上一层父目录的使用：

         <a href="../123456">

         <a href="../123456.html">



    5. 本目录上两层父目录的使用(如果更多层，则依此类推)：

         <a href="../../123456">

         <a href="../../123456.html">



    6. 本目录上一层父目录下一个名为new文件夹下的使用(也就是和本文件所在的文件夹在相同目录下的那个new文件夹)：

         <a href="../new/123456">

         <a href="../new/123456.html">



三、用于内部连接吧，叫锚定

    1、同页面跳转: 

   

```html
    <a href="#q1">问题一?</a> 

    <a href="#q1">问题二?</a> 

    <a href="#q1">问题二?</a> 

    
```

    <!-- 添加锚的方法 -->

   

```html
 <a name="q1">问题一的解答</a> 
```



    2、不同页面跳转: 

```html
    a.html的内容 <a href="b.html#q1">问题一?</a> 
```

注意： 

1.确定在同一个页面打开

    如果  

```html
  <a href="#q1">问题一?</a> 
```

  这样写不是在同一个页面打开的话，要加 target="_self"

```html
   <a href="#q1" target="_self" >问题一?</a> 

    <a href="#q2" target="_self" >问题二?
```



    添加锚点就是为了在同一个页面方便快捷地找到相应位置，所以要确定在同一个页面打开才好，呵呵

#### <form> 标签用于为用户输入创建 HTML 表单。

<!DOCTYPE html>
<html>
<body>

<form action="/demo/demo_form.asp">
First name:<br>
<input type="text" name="firstname" value="Mickey">
<br>
Last name:<br>
<input type="text" name="lastname" value="Mouse">
<br><br>
<input type="submit" value="Submit">
</form> 

<p>如果您点击提交，表单数据会被发送到名为 demo_form.asp 的页面。</p>

#### input的属性可以是

[文本域(Text fields)](http://www.w3school.com.cn/tiy/t.asp?f=html_inputfields) 

<input type="text" name="Firstname" value="Mike">

本例演示如何在 HTML 页面创建文本域。用户可以在文本域写入文本。

  

[密码域](http://www.w3school.com.cn/tiy/t.asp?f=html_passwordfields)

 type="password"

本例演示如何创建 HTML 的密码域。

  

[复选框](http://www.w3school.com.cn/tiy/t.asp?f=html_checkboxes)

 type="chekbox"

<html>

<body>

<form>
我喜欢自行车：
<input type="checkbox" name="Bike">
<br />
我喜欢汽车：
<input type="checkbox" name="Car">
</form>
</body>
</html>

本例演示如何在 HTML 页中创建文本框。用户可以选中或取消选取复选框。

  

[单选按钮](http://www.w3school.com.cn/tiy/t.asp?f=html_radiobuttons)

 <html>

<body>

<form>
男性：
<input type="radio" checked="checked" name="Sex" value="male" />
<br />
女性：
<input type="radio" name="Sex" value="female" />
</form>

<p>当用户点击一个单选按钮时，该按钮会变为选中状态，其他所有按钮会变为非选中状态。</p>

</body>
</html>

本例演示如何在 HTML 中创建单选按钮。

  

[简单的下拉列表](http://www.w3school.com.cn/tiy/t.asp?f=html_dropdownbox)

 <html>

<body>

<form>
<select name="cars">
<option value="volvo">Volvo</option>
<option value="saab">Saab</option>
<option value="fiat">Fiat</option>
<option value="audi">Audi</option>
</select>
</form>
</body>
</html>

本例演示如何在 HTML 页面中创建简单的下拉列表框。下拉列表框是一个可选列表。

  

[另一个下拉列表](http://www.w3school.com.cn/tiy/t.asp?f=html_dropdownbox2)

 <html>

<body>

<form>
<select name="cars">
<option value="volvo">Volvo</option>
<option value="saab">Saab</option>
<option value="fiat" selected="selected">Fiat</option>
<option value="audi">Audi</option>
</select>
</form>
</body>
</html>

本例演示如何创建一个简单的带有预选值的下拉列表。（译者注：预选值指预先指定的首选项。）

  

[文本域(Textarea)](http://www.w3school.com.cn/tiy/t.asp?f=html_textarea)

 <html>
<body>

<p>
This example cannot be edited
because our editor uses a textarea
for input,
and your browser does not allow
a textarea inside a textarea.即文本框不能包含文本框
</p>


<textarea rows="10" cols="30">
The cat was playing in the garden.

本例演示如何创建一个文本域（多行文本输入控制）。用户可以在文本域中写入文本。在文本域中，可写入的字符字数不受限制。

  

[创建按钮](http://www.w3school.com.cn/tiy/t.asp?f=html_button)

 <html>

<body>

<form>
<input type="button" value="Hello world!">
</form>
</body>
</html>

本例演示如何创建按钮。你可以对按钮上的文字进行自定义。

  

[围绕数据的Fieldset](http://www.w3school.com.cn/tiy/t.asp?f=html_fieldset)

 <!DOCTYPE HTML>
<html>

<body>

<form>
  <fieldset>
    <legend>健康信息</legend>
    身高：<input type="text" />
    体重：<input type="text" />
  </fieldset>
</form>

<p>如果表单周围没有边框，说明您的浏览器太老了。</p>

</body>
</html>

本例演示如何在数据周围绘制一个带标题的框。

  

[带有输入框和确认按钮的表单](http://www.w3school.com.cn/tiy/t.asp?f=html_form_submit)

 <!DOCTYPE html>
<html>
<body>

<form action="/demo/demo_form.asp">
First name:<br>
<input type="text" name="firstname" value="Mickey">
<br>
Last name:<br>
<input type="text" name="lastname" value="Mouse">
<br><br>
<input type="submit" value="Submit">
</form> 

<p>如果您点击提交，表单数据会被发送到名为 demo_form.asp 的页面。</p>

</body>
</html>

本例演示如何向页面添加表单。此表单包含两个输入框和一个确认按钮。

  

[带有复选框的表单](http://www.w3school.com.cn/tiy/t.asp?f=html_form_checkbox)

 <html>

<body>

<form name="input" action="/html/html_form_action.asp" method="get">
I have a bike:
<input type="checkbox" name="vehicle" value="Bike" checked="checked" />
<br />
I have a car: 
<input type="checkbox" name="vehicle" value="Car" />
<br />
I have an airplane: 
<input type="checkbox" name="vehicle" value="Airplane" />
<br /><br />
<input type="submit" value="Submit" />
</form> 

<p>如果您点击 "Submit" 按钮，您将把输入传送到名为 html_form_action.asp 的新页面。</p>

</body>
</html>

此表单包含两个复选框和一个确认按钮。

  

[带有单选按钮的表单](http://www.w3school.com.cn/tiy/t.asp?f=html_form_radio)

 <!DOCTYPE html>
<html>
<body>

<form>
<input type="radio" name="sex" value="male" checked>Male
<br>
<input type="radio" name="sex" value="female">Female
</form> 
</body>
</html>

此表单包含两个单选框和一个确认按钮。

  

[从表单发送电子邮件](http://www.w3school.com.cn/tiy/t.asp?f=html_form_mail)

 <html>

<body>

<form action="MAILTO:someone@w3school.com.cn" method="post" enctype="text/plain">
<h6>这个表单会把电子邮件发送到 W3School。</h6>

姓名：<br />
<input type="text" name="name" value="yourname" size="20">
<br />
电邮：<br />
<input type="text" name="mail" value="yourmail" size="20">
<br />
内容：<br />
<input type="text" name="comment" value="yourcomment" size="40">
<br /><br />
<input type="submit" value="发送">
<input type="reset" value="重置">

</form>
</body>
</html>

此例演示如何从表单发送电子邮件。

#### Html <form action="form_action.asp" `method="get"`>

- GET 方法发送只有少数简短字段的小表单。直接附在表单的 action URL 之后。这两者之间用问号进行分隔。如下：

<a href="http://www.example.com/example/program?x=28&amp;y=66">并不好用

#### [html的form的action属性作用](https://www.cnblogs.com/shengulong/p/7418456.html)

action=""和action="#"、没有action属性的作用相同，都是提交到当前页面

action="currentPage.xxx"：表示当前页面，则提交到当前页面并跳转；如果非当前页面，则跳转到非当前页面，优势在于

如果当前页面带有参数 , 参数也一并会提交 , 而且参数的优先级会高于 <form> 控件提交的参数，即如果 action="currentPage.xxx?arguments=values&…." 中的 arguments 有与 <form> 元素名相同的时候 ,获取值时 action=”currentPage.xxx?arguments=values&….” 值会将 <form> 的值覆盖，从页得到不正确的值.

 　　例 : SpecTop.asp 页面是表单要提交的页面 , 且有从上级页面传递过来参数 action="" 真正提交时的页面 : SpecTop.asp?ClassID=000100200005&SpeID=947&SpeType=3 

　　     如果 <form> 中有 <input type="text" name="SpeID" value="1000"/>, 提交时得到的值将会是 947, 而不是 1000, 而 action=”currentPage.xxx” 就能得到1000

#### Css的鼠标指针变化

<html>

<body>
<p>请把鼠标移动到单词上，可以看到鼠标指针发生变化：</p>
<span style="cursor:auto">
Auto</span><br />
<span style="cursor:crosshair">
Crosshair</span><br />
<span style="cursor:default">
Default</span><br />
<span style="cursor:pointer">
Pointer</span><br />
<span style="cursor:move">
Move</span><br />
<span style="cursor:e-resize">
e-resize</span><br />
<span style="cursor:ne-resize">
ne-resize</span><br />
<span style="cursor:nw-resize">
nw-resize</span><br />
<span style="cursor:n-resize">
n-resize</span><br />
<span style="cursor:se-resize">
se-resize</span><br />
<span style="cursor:sw-resize">
sw-resize</span><br />
<span style="cursor:s-resize">
s-resize</span><br />
<span style="cursor:w-resize">
w-resize</span><br />
<span style="cursor:text">
text</span><br />
<span style="cursor:wait">
wait</span><br />
<span style="cursor:help">
help</span>
</body>

</html>

> CSS的文字隐藏，把文字缩进到页面以外text-indent:-9999px;

#### Css中overflow的属性

| 值      | 描述                                                     |
| ------- | -------------------------------------------------------- |
| visible | 默认值。内容不会被修剪，会呈现在元素框之外。             |
| hidden  | 内容会被修剪，并且其余内容是不可见的。                   |
| scroll  | 内容会被修剪，但是浏览器会显示滚动条以便查看其余的内容。 |
| auto    | 如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容。 |
| inherit | 规定应该从父元素继承 overflow 属性的值。                 |

### html的表格用法

<!DOCTYPE html>
<html>
<head> 
<meta charset="utf-8"> 
<title>菜鸟教程(runoob.com)</title> 
</head>
<body>

<table width="500" border="0">
<tr>
<td colspan="2" style="background-color:#FFA500;">
<h1>主要的网页标题</h1>
</td>
</tr>
```html
<tr>
<td style="background-color:#FFD700;width:100px;vertical-align:top;">
<b>菜单</b><br>
HTML<br>
CSS<br>
JavaScript
</td>
<td style="background-color:#eeeeee;height:200px;width:400px;vertical-align:top;">
内容在这里</td>
</tr>

<tr>
<td colspan="2" style="background-color:#FFA500;text-align:center;">
版权 © runoob.com</td>
</tr>
</table>

</body>
</html>
```

![1552315934816](C:\Users\goodluck\AppData\Roaming\Typora\typora-user-images\1552315934816.png)
```

![1552487741669](C:\Users\goodluck\AppData\Roaming\Typora\typora-user-images\1552487741669.png)

![1552487808176](C:\Users\goodluck\AppData\Roaming\Typora\typora-user-images\1552487808176.png)

![1552492748053](C:\Users\goodluck\AppData\Roaming\Typora\typora-user-images\1552492748053.png)